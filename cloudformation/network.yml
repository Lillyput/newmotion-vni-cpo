Description: Standard network setup for product account

Parameters:
  VPCCIDR:
    Description: VPC CIDR Block
    Type: String
    Default: 10.0.0.0/16

Resources:
## VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: backend-vpc

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Select [ 0, !Cidr [ !Select [ 7, !Cidr [!Ref VPCCIDR, 8, 8 ]], 2, 7 ]]
      Tags:
        - Key: Name
          Value: backend-public-sn-1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Select [ 1, !Cidr [ !Select [ 6, !Cidr [!Ref VPCCIDR, 8, 8 ]], 2, 7 ]]
      Tags:
        - Key: Name
          Value: backend-public-sn-2
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Select [ 0, !Cidr [ !Select [ 6, !Cidr [!Ref VPCCIDR, 8, 8 ]], 2, 7 ]]
      Tags:
        - Key: Name
          Value: backend-public-sn-3
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Select [ 5, !Cidr [ !Ref VPCCIDR, 8, 8 ]]
      Tags:
        - Key: Name
          Value: backend-private-sn-1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Select [ 4, !Cidr [ !Ref VPCCIDR, 8, 8 ]]
      Tags:
        - Key: Name
          Value: backend-private-sn-2
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs ""]
      VpcId: !Ref VPC
      CidrBlock: !Select [ 3, !Cidr [ !Ref VPCCIDR, 8, 8 ]]
      Tags:
        - Key: Name
          Value: backend-private-sn-3

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: internet-gateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  ElasticIPNatGateway1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGatewayAZ1:
    DependsOn: InternetGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPNatGateway1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: backend-nat-sn-1
  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAZ1

  ElasticIPNatGateway2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGatewayAZ2:
    DependsOn: InternetGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPNatGateway2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: backend-nat-sn-2
  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAZ2

  ElasticIPNatGateway3:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGatewayAZ3:
    DependsOn: InternetGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPNatGateway3.AllocationId
      SubnetId: !Ref PublicSubnet3
      Tags:
        - Key: Name
          Value: backend-nat-sn-3
  PrivateRoute3:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAZ3

### Routes

  # Public Routes
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: backend-public-route-table

  PublicSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet3RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Private Routes
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: backend-private-route-table-1
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: backend-private-route-table-2
  PrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: backend-private-route-table-3
  PrivateSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

  PrivateSubnet3RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet3
      RouteTableId: !Ref PrivateRouteTable3

Outputs:
  VpcId:
    Description: VPC ID of Backend VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-vpc"

  VpcCIDR:
    Description: VPC CIDR of Backend VPC
    Value: !Ref VPCCIDR
    Export:
      Name: !Sub "${AWS::StackName}-vpc-cidr"

  PrivateSubnet1CIDR:
    Description: Private subnet 1 CIDR
    Value: !Select [ 0, !Cidr [ !Ref VPCCIDR , 4, 8 ]]
    Export:
      Name: !Sub "${AWS::StackName}-private-sn-1-cidr"

  PrivateSubnet2CIDR:
    Description: Private subnet 2 CIDR
    Value: !Select [ 1, !Cidr [ !Ref VPCCIDR , 4, 8 ]]
    Export:
      Name: !Sub "${AWS::StackName}-private-sn-2-cidr"

  PrivateSubnet3CIDR:
    Description: Private subnet 3 CIDR
    Value: !Select [ 2, !Cidr [ !Ref VPCCIDR , 4, 8 ]]
    Export:
      Name: !Sub "${AWS::StackName}-private-sn-3-cidr"

  PublicSubnet1CIDR:
    Description: Public subnet 1 CIDR
    Value: !Select [ 0, !Cidr [ !Select [ 7, !Cidr [!Ref VPCCIDR, 8, 8 ]], 2, 7 ]]
    Export:
      Name: !Sub "${AWS::StackName}-public-sn-1-cidr"

  PublicSubnet2CIDR:
    Description: Public subnet 2 CIDR
    Value: !Select [ 1, !Cidr [ !Select [ 6, !Cidr [!Ref VPCCIDR, 8, 8 ]], 2, 7 ]]
    Export:
      Name: !Sub "${AWS::StackName}-public-sn-2-cidr"

  PublicSubnet3CIDR:
    Description: Public subnet 3 CIDR
    Value: !Select [ 0, !Cidr [ !Select [ 6, !Cidr [!Ref VPCCIDR, 8, 8 ]], 2, 7 ]]
    Export:
      Name: !Sub "${AWS::StackName}-public-sn-3-cidr"

  PublicSubnet1:
    Description: Public subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-public-sn-1'

  PublicSubnet2:
    Description: Public subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-public-sn-2'

  PublicSubnet3:
    Description: Public subnet 3
    Value: !Ref PublicSubnet3
    Export:
      Name: !Sub '${AWS::StackName}-public-sn-3'

  PrivateSubnet1:
    Description: Private subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-private-sn-1'

  PrivateSubnet2:
    Description: Private subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-private-sn-2'

  PrivateSubnet3:
    Description: Private subnet 3
    Value: !Ref PrivateSubnet3
    Export:
      Name: !Sub '${AWS::StackName}-private-sn-3'
